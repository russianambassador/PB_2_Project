DATE: 18th of February
LOG: 
Decided upon the project. Project is concenred with building a social media web application aimed at helping communities to collaborate in fighting climate change and rising levels of pollution. Application will be build using MERN stack and I am aiming to learn React, in particular its applications in MERN stack applications, through building this project. Initialised the project repository and have shared it with a Durham University stuent with whom I have decided to collaborate. Started 
covering React Tutorial on Freecodecamp to grasp the basics of the framework. My aim is to finish it before starting to work on the project and build a number of beginner projects.
Additonally, I have researched possible effective folder structures of projects done using MERN stack and have 
created initial folder structure for the project to make sure the workflow is smoother in the future. Finally, I have comunicated with another project contributor to discuss our short-term and long-term aims and objectives of the project, consolidated our opinions on the main concept of project, as well as core tools and techniques we are planning to use. We have consequentially decided to reproduce a brief flowchart of the application to fall back on during production process. 
DATE: 22th of February
LOG: 
After learning together how to build application flow-charts, me and another 
project collaborator, we have designed a user experience flowchart using
Lucidchart software. This has involved us using how to use the software. We have achieved a clear representation of client-side application structure, which we believe will be usefull in the future production. As we learn more about Lucidchart I aim to improve the quality of the flowchart, or if needed, create a better one. In regards to my learning of react - so far I am still covering Freecodecamp course. I have already got good grasp of the JSX format and consolidated some knowledge about rendering elements. I have also learnt about creating components using classes or functions and how to get use of properties inside components. Moreover I have learnt about routes and redirects and did some additional reading in regards to this topic as I aim to implement as efficient routing as possible, as this will be very applicable during production of web application the project is concerned with. Next, I am aiming to learn about components' states and lifecycle and how to handle events in components properly. This will be necessary to create fully interactive pages while working on the project. 
DATE: 23rd of February
LOG: Along with learning how to work with React, I have decided to spent some time learning how to create designs using Figma software. I have created a simple design of the final look of the project we aim to achieve. In particular I have learnt how frames and shapes work, how to set object constraints, how to format text and load custom fonts and finally how prototypes and components work. Regarding react, I have learnt about component's lifecycle and how to handle events using React. Now I know how to use hooks such us "componentWillUnmount" or "componentDidMount", or "useEffect" if I am using a functional component. Next, I am aiming to learn how to use lists in react correctly using keys to render elements using built-in "map" function. I also want to learn how to build forms in react asap, as this is essential for the project.
DATE: 4th of March
LOG: Along with learning react, I have starrted to dive deeper into MongoDB and database schemas using mongoose. I have used MongoDB docs and Mongoose docs to do that. I suggest that it is essential to get a good grasp of this to successfully build a full-stack application based on MERN. So far I have learnt how to create schemas, add sub schemas and add methods to schemas. In the future I aim to be able to use mongoose to optimize the use of the database. So far I have  continued to learn React. Have successfully reached all learning goals set previously, including lists and keys and React forms. I have built 2 sample projcts to 
practice skills I have learned. Soon will start building profile page in our project. Additionally, I have decided to read through React docs and look at the recomended methods and applications of react. This has allowed me to learn about composition model which React uses - I have found it to be a very poweful concept which helps to generalize react components more clearly, allowing to save time and lines of code during production. 
DATE: 6th of March
LOG: Created a final practice project using react and pushed it to my github - https://github.com/russianambassador/restaurant_review_webapp
This has helped me to apply in practice skills I have learnt so far.
DATE: 7th of March
LOG: Learned how to apply Express and Node in applications based on MERN through watching Freecodecamp MERN tutorials on youtube. Initialised server side and loaded all necessary npm packages. Researched necessary npm packages to ensure safe user-server interaction in the future, such as helmet - this one in particular helps secure express application by setting various HTTP headers.	Additionally, learned how cookies work and how to load and extract cookies from users browser, as well as httpOnly cookies work. I will be using this to authenticate users in the future by saving login key generated by npm jsonwebtoken into cookies in users browser. Used my knowledge of Node and Express to create initial routes/controllers, added .env and mongoose schema for new users. Created auth controller to add new users to cloud MongoDB. 
DATE: 10th of March
LOG: Learned more about http-only cookies and managed to establish an authorised access to application using the knowledge obtained. In addition, I have learnt how to handle errors related to mongoose schemas and MongoDB database in general. This has assisted me in creating error-handler which sends helpful messages to developers when debugging, and users if connection to the database is lost. This has lead me to editing the HTTP responses from the server so they are less redundant and more helpful to the developer and user. This was done with me learning different HTTP response status codes on the go. Eventually it has appeared to be rather useful as HTTP status codes result to be displayed at the client's side and hence they must be accurate to not confuse the user. Next, I aim to learn about asset management and styling in MERN stack applications, as well as learn to optimize my application to minimize the number of fetch requests.
LOG: So far I have successfully learned how to manage assets in MERN stack applications by using webpack bundler. Now, I store all necessary assets in my src folder. Regarding styling, I have researched pros and cons of different methods, including vanilla CSS, different CSS preprocessors such as SCSS or CSS-in-JS and eventually I have decided to use CSS-in-JS via styled components npm package. This is because it allows more dynamic styling which is what I aim to achieve in my application. Furthermore, I have learned how to reduce the number of unneccessary React re-renders to reduce the number of fetch requests. This article has offered me a great help in tackling this issue https://medium.com/welldone-software/how-to-reduce-unnecessary-re-renders-3f840d8b2f27. Regarding the total progress in project I am contributing to, I have successfully added profile page, feed, custom assets for styling, login adn registration pages. My future goal is to learn how to adapt the webapplication to different browsers and how to make it responsive to different viewport sizes.

EDITED on 27th of April